{
  "hash": "b331148a456af23dc95947ee7b96f9f7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Pocket Money [A3]\"\nauthor: \"Aish\"\n---\n\n\n\n# Pocket Money Data-set\n\nThis data-set shows the money spent by each individual on that particular day.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula)\nlibrary(crosstable)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'crosstable'\n\nThe following object is masked from 'package:purrr':\n\n    compact\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(broom)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmoney <- read_csv(\"../../data/Pocket_Money.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\nRows: 82 Columns: 5\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(2): Name, Gender dbl (2): Sr no, Money_spent lgl (1): ...5\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...5`\n```\n\n\n:::\n\n```{.r .cell-code}\nmoney\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 82 × 5\n   `Sr no` Name     Gender Money_spent ...5 \n     <dbl> <chr>    <chr>        <dbl> <lgl>\n 1       1 Aagam    Male           150 NA   \n 2       2 Aakash   Male           240 NA   \n 3       3 Aarushi  Female         382 NA   \n 4       4 Abheeta  Female          60 NA   \n 5       5 Adithya  Male            68 NA   \n 6       6 Aditya   Male           300 NA   \n 7       7 Akanksha Female         270 NA   \n 8       8 Amruta   Female         190 NA   \n 9       9 Anaaya   Female         300 NA   \n10      10 Anish    Male             0 NA   \n# ℹ 72 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmoney %>% \n  crosstable(Money_spent ~ Gender) %>% \n  as_flextable()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-28581ecc{table-layout:auto;}.cl-284f047c{font-family:'Arial';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-284f0490{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-28528e62{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-28528e6c{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-2852b112{background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-2852b113{background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(0, 0, 0, 1.00);border-top: 1.5pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-2852b11c{background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-2852b11d{background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-2852b11e{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-28581ecc'><thead><tr style=\"overflow-wrap:break-word;\"><th  rowspan=\"2\"class=\"cl-2852b112\"><p class=\"cl-28528e62\"><span class=\"cl-284f047c\">label</span></p></th><th  rowspan=\"2\"class=\"cl-2852b112\"><p class=\"cl-28528e62\"><span class=\"cl-284f047c\">variable</span></p></th><th  colspan=\"2\"class=\"cl-2852b113\"><p class=\"cl-28528e62\"><span class=\"cl-284f047c\">Gender</span></p></th></tr><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-2852b11c\"><p class=\"cl-28528e62\"><span class=\"cl-284f047c\">Female</span></p></th><th class=\"cl-2852b11c\"><p class=\"cl-28528e62\"><span class=\"cl-284f047c\">Male</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"4\"class=\"cl-2852b11d\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">Money_spent</span></p></td><td class=\"cl-2852b11e\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">Min / Max</span></p></td><td class=\"cl-2852b11e\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">0 / 1.3e+04</span></p></td><td class=\"cl-2852b11e\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">0 / 1.0e+04</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-2852b11e\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">Med [IQR]</span></p></td><td class=\"cl-2852b11e\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">280.0 [85.0;500.0]</span></p></td><td class=\"cl-2852b11e\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">250.0 [150.0;842.0]</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-2852b11e\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">Mean (std)</span></p></td><td class=\"cl-2852b11e\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">693.3 (2035.8)</span></p></td><td class=\"cl-2852b11e\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">748.6 (1636.5)</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-2852b11d\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">N (NA)</span></p></td><td class=\"cl-2852b11d\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">41 (0)</span></p></td><td class=\"cl-2852b11d\"><p class=\"cl-28528e6c\"><span class=\"cl-284f0490\">41 (0)</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmoney_modified <- money %>% \n  dplyr::mutate(\n    Gender = as_factor(Gender)\n  )\n\nglimpse(money_modified)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 82\nColumns: 5\n$ `Sr no`     <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,…\n$ Name        <chr> \"Aagam\", \"Aakash\", \"Aarushi\", \"Abheeta\", \"Adithya\", \"Adity…\n$ Gender      <fct> Male, Male, Female, Female, Male, Male, Female, Female, Fe…\n$ Money_spent <dbl> 150, 240, 382, 60, 68, 300, 270, 190, 300, 0, 250, 85, 700…\n$ ...5        <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshapiro.test(money_modified$Money_spent)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  money_modified$Money_spent\nW = 0.34508, p-value < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\nThe closer the value of W is to 1, the more likely the data is to be normally distributed. Here, W = 0.34508 (quite far from 1). Hence the data is not normally distributed.\n\n```         \n```\n\nTherefore, we do not need to do the t.test, but the wilcox test. However, I would want to compare the means of groups while assuming normality. So let's do the t.test first and then move on to the wilcox test.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmosaic::t_test(Money_spent ~ Gender, data = money_modified) \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tWelch Two Sample t-test\n\ndata:  Money_spent by Gender\nt = 0.13555, df = 76.468, p-value = 0.8925\nalternative hypothesis: true difference in means between group Male and group Female is not equal to 0\n95 percent confidence interval:\n -757.0748  867.6602\nsample estimates:\n  mean in group Male mean in group Female \n            748.6098             693.3171 \n```\n\n\n:::\n:::\n\n\n\n-   While the **Shapiro test** indicates that the data for `Money_spent` is not normally distributed, the **t-test** finds no significant difference in mean `Money_spent` between males and females, as indicated by a high p-value.\n\nlet's now do the wilcox test to get more clarity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwilcox.test(Money_spent ~ Gender, data = money_modified) %>%  \n  broom::tidy()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in wilcox.test.default(x = DATA[[1L]], y = DATA[[2L]], ...): cannot\ncompute exact p-value with ties\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  statistic p.value method                                           alternative\n      <dbl>   <dbl> <chr>                                            <chr>      \n1      936.   0.381 Wilcoxon rank sum test with continuity correcti… two.sided  \n```\n\n\n:::\n:::\n\n\n\n**p-value is low**. Hence, I shall not reject the null hypothesis, suggesting that there isn't any statistically significant difference between the two genders and the money spent on that day.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoney_modified %>% \ngf_histogram(~Money_spent, fill = ~Gender)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/tabwid-1.1.3/tabwid.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}